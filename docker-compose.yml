services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: es-mini
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    # EXEC-form healthcheck (no shell) so '*' etc. never get globbed
    healthcheck:
      test: ["CMD", "curl", "-s", "-u", "elastic:${ELASTIC_PASSWORD}", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 30
    networks: [elk]
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.0
    container_name: logstash-mini
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      # Logstash will use 'elastic' + ELASTIC_PASSWORD to talk to ES (configure in pipeline output)
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - LS_JAVA_OPTS=-Xms256m -Xmx256m
      - xpack.monitoring.enabled=false
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./logs:/logs
    networks: [elk]
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    container_name: kibana-mini
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      ELASTICSEARCH_USERNAME: "kibana_system"
      ELASTICSEARCH_PASSWORD: "${KIBANA_SYSTEM_PASSWORD}"
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - kibanadata:/usr/share/kibana/data
    networks:
      - elk
    restart: unless-stopped

networks:
  elk:
    driver: bridge

volumes:
  esdata:
  kibanadata:
